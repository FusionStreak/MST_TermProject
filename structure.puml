@startuml GeneralStructure

skinparam{
    backgroundColor #202020
    defaultFontName Courier
    defaultFontColor #FFFFFF

    ClassBackgroundColor #333333
    ClassBorderColor #AAAAAA
    ClassHeaderBackgroundColor #444444
    ClassFontSize 19
    ClassFontStyle bold
    ClassAttributeFontSize 17
    

    Linetype orthogonal
    Nodesep 150
    Ranksep 150
    ArrowThickness 3
    ArrowColor #FFFFFF
  
}

title Team MST - Class UML Diagram


class Attack {
  -type                               Type
  -dateTime                           Date
  -city                             String
  --[Constructors]--
  +Attack(String, String, String, String)
  +Attack(Type, Date, String, String)
  --[Methods]--
  -toDate(String)                     Date
  +toEpoch()                          long
  +compare(Attack)                    long
  ..Getters..
  +getCity()                        String
  +getDateTime()                      Date
  +getType()                          Type
  ..Setters..
  +setCity(String)                    void
  +setDateTime(String)                void
  +setType(Type)                      void
  ..Overloaded..
  +toString()                       String
  +equals(Object)                  boolean
}

class City {
  -name                                  String
  -firewall                             boolean
  -attacks                    ArrayList<Attack>
  -position                               Point
  -currStatus                            Status
  --[Constructors]--
  +City(String, Boolean)
  --[Methods]--
  +addAttack(Attack)                    boolean
  +alert(Type)                             void
  ..Getters..
  +getAttacks()               ArrayList<Attack>
  +getCurrStatus()                       Status
  +hasFirewall()                        boolean
  +getName()                             String
  +getPosition()                          Point
  ..Setters..
  +setAttacks(ArrayList<Attack>)           void
  +setCurrStatus(Status)                   void
  +setFirewall(boolean)                    void
  +setName(String)                         void
  +setPosition(Point)                      void
}

class Graph {
  -citiesMap                 HashMap<City, City[]>
  --[Constructors]--
  Graph()
  Graph(String)
  --[Methods]--
  -extendArray(City[], City)                City[]
  -printCityName(City[])                    String
  -findCities(String, String)               City[]
  +addCity(City)                              void
  +addCity(String, boolean, City.Point)       void
  +addRoute(String, String)                   void
  +attack(Attack)                             void
  +findPath(String, String)                 String
  ..Queries..
  +hasFirewall()                            String
  +hasAttackedFirewall()                    String
  +isInactive()                             String
  +isInfected()                             String
  +outbreaks()                              String
  ..Overloaded..
  +toString()                               String
}

class Main {
  -mainframe                          Graph
  -attacksA                        Attack[]
  -in                               Scanner
  --[Methods]--
  +main(String[])                       void
  ..CLI..
  -printHeader()                        void
  -mainMenu()                         String
  -gMenu()                              void
  -aMenu()                              void
  -sMenu()                              void
  ..Supporting..
  -parseAttacks(String)                 void
  -sortAttacks(Attack[], int, int)      void
  -partition(Attack[], int, int)         int
  -printAttacks()                       void
  -shuffleArray(Attack[])               void
}

City <--l--* Attack
Graph <-u-* City
Main <..r.. Graph
@enduml